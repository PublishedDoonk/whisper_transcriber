Filename;Filetype;MD5;Filepath;Filesize;Created;Accessed;Modified;Transcript
phase1 - Copy.mp4;MP4;395d3c0b851a21f932f17c6b723d93ce;audio\phase1 - Copy.mp4;15536236;1698952205.4442587;1699041457.5249462;1681255986.1401443;Hi, I'm Kyle Ott from Group 2, and this is our phase 1 presentation. I will be covering the Python code for the web page development and going over the login page as well as the registration page. Alex will be covering the HTML, JavaScript code and development, and Zach will cover the chatbot AI, and where we intend to go with our project. Starting off, this is our main Python code to render the chatroom and connect to the database. As you can see, we're using Python's Flask for the web page development and we're using MySQL for the database to save the usernames and passwords. We have all our imports up top, all our logging information to keep track of failed users login as well as successful logins. I've deleted out all my personal passwords and information for this presentation, but generally speaking, you'd have your database host, your database user, your password, and the name of the database right here. Going on, then we have our routes to our different portions of the web page. This is the login code here. Basically, this is going to pull the username, the password, the language of choice, and the API key from the login page and feed it into other areas of the application. This is where it's checking the username and password against the usernames and passwords saved in the database. We have some error checking here. Sorry, that's scrolled up for a moment. Some error checking right here as if the username is not correct, it won't allow you in. Then if it is correct, then we have successful login on the page here, which starts a session, which will allow you to get to the other pages and redirect you to the main chat room. Moving on, this is the code for the registration page. Very similar principle. It's going to take the username and the password, and then a confirmed password request, and then push them into the database. Then with this code right here, this code actually pulls it from the web page. Then again, we're going to do some error checking, so if that account already exists, it's going to not allow you to create a new account with the same name. It's going to check the username against a specific set. In this case, only letters and numbers, it won't allow you to put in dashes. That way, with doing that, we help bypass some SQL injection issues. Same goes for the passwords. We're going to check that against the common password list. We're going to check that it contains lowercase and uppercase, symbols, and numbers, and it's got to be at least 12 characters long. For password security there, if you don't have the passwords matching, it won't let you register, so we're checking the password versus the confirmed password. Then if everything is correct, it will insert the password and username into the database. It's going to commit them, and it will tell you successfully register and redirect you to the login page to allow you to actually log in. Then if you leave things blank, it's going to just re-pull that page and tell you you need to enter the required information. This is just the route to render the chatroom template, and then this is the get chatbot response. If you're not logged in, it won't actually run the chatbot, so we're pulling the key right here because we're going to send that to the chatbot to allow it access to the API from ChatGPT. Then this is where we're taking the user text, so we're getting what the user enters also to send to the chatbot, and then we send that information over to the chatbot. Then if you were to try to access that page, it's going to just tell you to log in if you haven't, and then log out just ends the session stuff so we can restrict the access to those pages. Moving further down, then we have our code for checking the password against the list, so we have a common password text file. This will just open it and read it, and here we're actually checking the password against what you entered, and then this final portion here is going to check the password against all the other things to make sure you have a digit, or you have an uppercase letter, lowercase letter, special character, and then if everything's okay, it's going to send back to the Python program or the other Python function that it's all good to go. We're going to continue on with this. Minimize that, minimize that, and now that the program is actually running, we'll pull up our web page. The login page is going to look something like this, and it's going to ask for your username, your password, your API key in English, and then if you don't have an account, you can click over here to register. Just as some examples, we will test a couple of things here. Telling you that your password doesn't contain the correct items. If it does, and we'll do this again. As you can see, that's successfully registered an account, and we are going to log in. So the API key, you will have to get on your own there. For this case, we're going to pause the recording real quick. I'll just show you the language selection menu there, and then we're going to pause recording so I can enter that and get to the next screen. Real quick, I will show what happens if you don't enter a proper AI key. So we're just going to put in some gibberish there. It is going to allow you to log in, being as that you do have account created, but I will show you that it's going to send you a message back telling you you need to enter a valid key. So the bot will not work, and we are going to go ahead and enter the correct key this time. So now with the correct key entered, I'm going to say hello. As you can see, the chat bot will respond to you, and this is not a generic testing bot, even though it says it is at the moment. This is the actual full connection to chat GPT. So I'll just ask it a question. So as you can see that the bot is working, and it is going to send back the correct response. So that's kind of just the base little coverage there of our login page, our registration page, and a little bit of how the chat bot works. Alex and Zach will go into more details about the other aspects of this program.
phase1.mp4;MP4;395d3c0b851a21f932f17c6b723d93ce;audio\phase1.mp4;15536236;1698871709.0125844;1699041478.8708155;1681255986.1401443;Hi, I'm Kyle Ott from Group 2, and this is our phase 1 presentation. I will be covering the Python code for the web page development and going over the login page as well as the registration page. Alex will be covering the HTML, JavaScript code and development, and Zach will cover the chatbot AI, and where we intend to go with our project. Starting off, this is our main Python code to render the chatroom and connect to the database. As you can see, we're using Python's Flask for the web page development and we're using MySQL for the database to save the usernames and passwords. We have all our imports up top, all our logging information to keep track of failed users login as well as successful logins. I've deleted out all my personal passwords and information for this presentation, but generally speaking, you'd have your database host, your database user, your password, and the name of the database right here. Going on, then we have our routes to our different portions of the web page. This is the login code here. Basically, this is going to pull the username, the password, the language of choice, and the API key from the login page and feed it into other areas of the application. This is where it's checking the username and password against the usernames and passwords saved in the database. We have some error checking here. Sorry, that's scrolled up for a moment. Some error checking right here as if the username is not correct, it won't allow you in. Then if it is correct, then we have successful login on the page here, which starts a session, which will allow you to get to the other pages and redirect you to the main chat room. Moving on, this is the code for the registration page. Very similar principle. It's going to take the username and the password, and then a confirmed password request, and then push them into the database. Then with this code right here, this code actually pulls it from the web page. Then again, we're going to do some error checking, so if that account already exists, it's going to not allow you to create a new account with the same name. It's going to check the username against a specific set. In this case, only letters and numbers, it won't allow you to put in dashes. That way, with doing that, we help bypass some SQL injection issues. Same goes for the passwords. We're going to check that against the common password list. We're going to check that it contains lowercase and uppercase, symbols, and numbers, and it's got to be at least 12 characters long. For password security there, if you don't have the passwords matching, it won't let you register, so we're checking the password versus the confirmed password. Then if everything is correct, it will insert the password and username into the database. It's going to commit them, and it will tell you successfully register and redirect you to the login page to allow you to actually log in. Then if you leave things blank, it's going to just re-pull that page and tell you you need to enter the required information. This is just the route to render the chatroom template, and then this is the get chatbot response. If you're not logged in, it won't actually run the chatbot, so we're pulling the key right here because we're going to send that to the chatbot to allow it access to the API from ChatGPT. Then this is where we're taking the user text, so we're getting what the user enters also to send to the chatbot, and then we send that information over to the chatbot. Then if you were to try to access that page, it's going to just tell you to log in if you haven't, and then log out just ends the session stuff so we can restrict the access to those pages. Moving further down, then we have our code for checking the password against the list, so we have a common password text file. This will just open it and read it, and here we're actually checking the password against what you entered, and then this final portion here is going to check the password against all the other things to make sure you have a digit, or you have an uppercase letter, lowercase letter, special character, and then if everything's okay, it's going to send back to the Python program or the other Python function that it's all good to go. We're going to continue on with this. Minimize that, minimize that, and now that the program is actually running, we'll pull up our web page. The login page is going to look something like this, and it's going to ask for your username, your password, your API key in English, and then if you don't have an account, you can click over here to register. Just as some examples, we will test a couple of things here. Telling you that your password doesn't contain the correct items. If it does, and we'll do this again. As you can see, that's successfully registered an account, and we are going to log in. So the API key, you will have to get on your own there. For this case, we're going to pause the recording real quick. I'll just show you the language selection menu there, and then we're going to pause recording so I can enter that and get to the next screen. Real quick, I will show what happens if you don't enter a proper AI key. So we're just going to put in some gibberish there. It is going to allow you to log in, being as that you do have account created, but I will show you that it's going to send you a message back telling you you need to enter a valid key. So the bot will not work, and we are going to go ahead and enter the correct key this time. So now with the correct key entered, I'm going to say hello. As you can see, the chat bot will respond to you, and this is not a generic testing bot, even though it says it is at the moment. This is the actual full connection to chat GPT. So I'll just ask it a question. So as you can see that the bot is working, and it is going to send back the correct response. So that's kind of just the base little coverage there of our login page, our registration page, and a little bit of how the chat bot works. Alex and Zach will go into more details about the other aspects of this program.
